# 一次性上线命令清单（Ubuntu/Debian）
# 如果你已安装过某些组件，可按需跳过

# 1) 基础包、Node.js 18、PM2、Nginx
sudo apt update && sudo apt install -y curl git unzip ca-certificates gnupg nginx
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
sudo apt-get install -y nodejs
sudo npm i -g pm2

# 2) 目录结构
sudo mkdir -p /opt/dog-catch/backend /opt/dog-catch/frontend-dist /opt/dog-catch/admin-dist
sudo mkdir -p /var/log/pm2

# 3) 服务器端构建与发布（已在服务器克隆源码）
# 后端：无需上传，直接使用 /opt/dog-catch/backend
# 前台：在服务器使用 Vite 构建并发布到 /opt/dog-catch/frontend-dist（部署脚本会自动使用 config.production.js 作为生产配置）
cd /opt/dog-catch/frontend
npm ci
npm run build
sudo rsync -av --delete /opt/dog-catch/frontend/dist/ /opt/dog-catch/frontend-dist/
# 管理后台：在服务器构建并发布
cd /opt/dog-catch/admin
npm ci
npm run build
sudo rsync -av --delete /opt/dog-catch/admin/dist/ /opt/dog-catch/admin-dist/

# 4) 后端依赖安装
cd /opt/dog-catch/backend
sudo npm ci

# 5) 设置环境变量（必须）
# 5.1) Linux 服务器（推荐）
# 请在当前 Shell 会话中加载环境变量，使 PM2 读取到这些值。
# 注意：必须使用 source 以便变量在当前会话生效。
source /opt/dog-catch/deploy/set-env.sh
# 如需在后续更新环境变量后让 PM2 使用新值，可执行：
# pm2 restart dog-catch-backend --update-env

# 6) PM2 配置与启动
# 使用仓库中的 PM2 配置文件（deploy/pm2-ecosystem.config.js），其中 env 字段会优先读取上一步设置的环境变量。
sudo cp -f /opt/dog-catch/deploy/pm2-ecosystem.config.js /opt/dog-catch/pm2-ecosystem.config.js
pm2 start /opt/dog-catch/pm2-ecosystem.config.js
pm2 save
pm2 status

# 7) Nginx 站点配置（使用 deploy/nginx-sites.conf）
# 请确保 /root/cert/ 下的证书文件路径与 nginx-sites.conf 中保持一致。
sudo cp -f /opt/dog-catch/deploy/nginx-sites.conf /etc/nginx/sites-available/sub-dog.top
sudo ln -sf /etc/nginx/sites-available/sub-dog.top /etc/nginx/sites-enabled/sub-dog.top
sudo nginx -t && sudo systemctl reload nginx

# 8) 自检
curl -I http://api.sub-dog.top
curl -I https://api.sub-dog.top
curl -I https://player.sub-dog.top
curl -I https://admin.sub-dog.top

# 如果启用了 UFW，确保放行 80/443（可选）
# sudo ufw allow 80/tcp && sudo ufw allow 443/tcp && sudo ufw reload